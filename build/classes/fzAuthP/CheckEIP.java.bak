
package fzAuthP;

import java.sql.*;

import ci.db.*;

/**
 * 驗證EIP
 * 
 * @author cs71 at 2012/01/05
 */
public class CheckEIP 
{
	private boolean	passEIP;

	/**
	 * @throws NullPointerException
	 *             無帳號密碼（未Initial UserID)
	 * @throws AuthenticationFailedException
	 *             帳號密碼錯誤
	 */
	 public static void main(String[] args) 
	 {
//	     CheckEIP ckEIP = new CheckEIP();
//	     System.out.println(ckEIP.isPassEIP());
	 }
	
	public CheckEIP(String usid, String pwd, String eip_key, String eip_empn, String hostip, String clientip) 
	{
		Connection conn = null;
		PreparedStatement pstmt = null;
		Driver dbDriver = null;
		ResultSet rs = null;	
	    CallableStatement select = null;
        String check_id = "";
        
        if(!"".equals(usid) && usid != null)
        {
            check_id = usid;
        }
        
        if(!"".equals(eip_empn) && eip_empn != null)
        {
            check_id = eip_empn;
        }       
        
        try
        {
            //判斷是否為FZTUIDG有設定之人員
            //如果輸入userid 為6位數字, 則使用全員信箱認證
            for(int j = 0; j < eip_empn.length(); j++) 
            {
                char c = eip_empn.charAt(j);
                if("0123456789".indexOf(c) >= 0)
                i++;
            }
          
            if( i == 6  )  // 輸入六位數字：1. 先判斷全員信箱ID & Password是否正確
            { 
                try 
				{	
	                if(!"".equals(pwd) && pwd != null)
				    {//EIP 認証
					    Class.forName("com.microsoft.jdbc.sqlserver.SQLServerDriver");
				        conn = DriverManager.getConnection("jdbc:microsoft:sqlserver://10.16.48.20:1433;DatabaseName=EIP_IP", "hr_cs_ecrews","cs4588ecrews");
						select = conn.prepareCall("{call UserAuthorization(?,?)}");
						select.setString(1, usid);
						select.setString(2, pwd);
						rs = select.executeQuery();
	
						if (rs.next()) 
						{	
							if (!"1".equalsIgnoreCase(rs.getString(1))) 
							{
							    rs = "Please check your UserID or Password !";
							}
						}
						else
						{
						    rs = "Please check your UserID or Password !";
						}
				    }//if(!"".equals(pwd) && pwd != null)
				    else
				    {//if(!"".equals(eip_key) && eip_key != null)
				     //SSO 認証				        
					    Class.forName("com.microsoft.jdbc.sqlserver.SQLServerDriver");
				        conn = DriverManager.getConnection("jdbc:microsoft:sqlserver://10.16.48.20:1433;DatabaseName=EIP_LOG", "hr_cs","cz6312cs");
	
						select = conn.prepareCall("{call UserSSOAuthorization_SSO_CS(?,?,?,?,?,?,?,?,?,?)}");
						select.setString(1, eip_key);
						select.setString(2, eip_empn);
						select.setString(3, hostip);
						select.setString(4, clientip);
						select.setTimestamp(5, new Timestamp((new java.util.Date()).getTime()));
						select.setInt(6, (int) (Math.random() * 10000));
						select.registerOutParameter(7, Types.VARCHAR);//result of EIP check -> Y or N 
						select.registerOutParameter(8, Types.TIMESTAMP);//timestamp of eip write in  
						select.registerOutParameter(9, Types.TIMESTAMP);//timestamp of ap call 
						select.registerOutParameter(10, Types.VARCHAR);//
						select.execute();
						
						String iCheck = select.getString(7);
						Timestamp isysWriteDatetime = select.getTimestamp(8);
						Timestamp isysCheckDatetime = select.getTimestamp(9);
						String iCheckOut = select.getString(10);
	
						if (!"Y".equalsIgnoreCase(iCheck)) 
						{
						    rs = "Please check your UserID or Password !";
						}
						
						if (isysWriteDatetime == null) 
						{
						    rs = "Please Login again !";
						}
						
						if (isysCheckDatetime == null) 
						{
						    rs = "Please Login again !";
						}
	
						int TMDiff = (int) ((isysCheckDatetime.getTime() - isysWriteDatetime.getTime()) / (1000));
	
						if ("Y".equalsIgnoreCase(iCheck) && TMDiff > 300) 
						{
						    rs = "Please Login again !";
						}						
				    }
			} 
			catch (Exception e) 
			{
				e.printStackTrace();
				rs = "Error : " + e.toString();
			} 
			finally 
			{
				if (rs != null)
                try
                {
                    rs.close();
                }
                catch ( Exception e )
                {
                    rs = "Error2 : " + e.toString();
                }
            if (select != null)
                try
                {
                    select.close();
                }
                catch ( Exception e )
                {
                    rs = "Error3 : " + e.toString();
                }
            if (conn != null)
                try
                {
                    conn.close();
                }
                catch ( Exception e )
                {
                    rs = "Error4 : " + e.toString();
                }
		}
		catch (AuthenticationFailedException e) 
		{
			//			帳號密碼驗證不過
			setPassEIP(false);
		} 
		catch (NoSuchProviderException e) 
		{
			e.printStackTrace();
			setPassEIP(false);			
		} 
		catch (MessagingException e) 
		{
			e.printStackTrace();
			setPassEIP(false);
		}        
        catch(Exception e)
        {
             rs = "Error : "+e.toString(); 
             setPassEIP(false);
        }
        finally
        {
        	if(rs!=null)try{rs.close();}catch(Exception e){}
            if(stmt!=null)try{stmt.close();}catch(Exception e){}
            if(conn!=null)try{conn.close();}catch(Exception e){}
        }
	}

	public boolean isPassEIP() {
		return passEIP;
	}

	public void setPassEIP(boolean passEIP) {
		this.passEIP = passEIP;
	}
}
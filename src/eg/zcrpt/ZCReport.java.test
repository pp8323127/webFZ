package eg.zcrpt;

import ci.db.ConnectionHelper;
import eg.EGInfo;
import eg.EgInfoObj;
import fz.prObj.FltObj;
import fz.pracP.FlightCrewList;
import fz.pracP.GetFltInfo;
import fz.pracP.dispatch.FlexibleDispatch;
import fzac.CrewInfoObj;
import java.io.PrintStream;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
//test版本.
public class ZCReport
{
  ArrayList objAL = new ArrayList();
  ArrayList crewListobjAL = new ArrayList();
  ArrayList fltIrrobjAL = new ArrayList();
  ArrayList crewGradeobjAL = new ArrayList();

  private String errorstr = "Y";
  private String sql = "";

  public static void main(String[] args)
  {
    ZCReport zcrt = new ZCReport();

    //zcrt.getZCFltList("2010", "11", "637279");
  

    System.out.println("Done");
  }

  public void getZCFltList(String yyyy, String mm, String empno)
  {
    Connection conn = null;
    Statement stmt = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    Driver dbDriver = null;
    FlexibleDispatch fld = new FlexibleDispatch();
    try
    {
      ConnectionHelper ch = new ConnectionHelper();
      conn = ch.getConnection();
      stmt = conn.createStatement();

      this.sql = " select to_char(dps.str_dt_tm_loc,'yyyy/mm/dd') fdate, dps.flt_num flt_num,  to_char(str_dt_tm_loc,'yyyy/mm/dd hh24:mi') stdDt, dps.port_a||dps.port_b port,  r.acting_rank act_rank, r.special_indicator special_indicator, maxseqno, cflt.*  from duty_prd_seg_v dps, roster_v r ,  (SELECT cflt.*, To_Char(fltd,'yyyymmdd')||sect||fltno||zcempn keystr  FROM egtzcflt cflt WHERE fltd BETWEEN to_date('" + 
        yyyy + mm + "01 0000','yyyymmdd hh24mi') - 1 " + 
        " AND Last_Day(to_date('" + yyyy + mm + "01 2359','yyyymmdd hh24mi') ) AND zcempn = '" + empno + "') cflt, " + 
        " (select nvl(max(seqno),0)+1 maxseqno from egtzcflt) getseqno " + 
        " where dps.series_num=r.series_num " + 
        " AND To_Char(dps.str_dt_tm_loc,'yyyymmdd')||dps.port_a||dps.port_b||dps.flt_num||'" + empno + "' = cflt.keystr (+) " + 
        " and dps.delete_ind = 'N' AND  r.delete_ind='N' and r.staff_num ='" + empno + "' " + 
        " AND dps.act_str_dt_tm_gmt BETWEEN to_date('" + yyyy + mm + "01 0000','yyyymmdd hh24mi') " + 
        " AND Last_Day(to_date('" + yyyy + mm + "01 2359','yyyymmdd hh24mi') ) AND dps.duty_cd='FLY'  " + 
        " order by str_dt_tm_gmt";

      rs = stmt.executeQuery(this.sql);

      while (rs.next())
      {
        ZCReportObj obj = new ZCReportObj();
        obj.setFdate(rs.getString("fdate"));
        obj.setFlt_num(rs.getString("flt_num"));
        obj.setStdDt(rs.getString("stdDt"));
        obj.setPort(rs.getString("port"));
        obj.setAct_rank(getZCRank(empno));//"FC"
        obj.setSpecial_indicator(rs.getString("special_indicator"));
        obj.setSeqno(rs.getString("seqno"));
        obj.setFltd(rs.getString("fltd"));
        obj.setFltno(rs.getString("fltno"));
        obj.setSect(rs.getString("sect"));
        obj.setAcno(rs.getString("acno"));
        obj.setCpname(rs.getString("cpname"));
        obj.setCpno(rs.getString("cpno"));
        obj.setPsrname(rs.getString("psrname"));
        obj.setPsrempn(rs.getString("psrempn"));
        obj.setPsrsern(rs.getString("psrsern"));
        obj.setPgroups(rs.getString("pgroups"));
        obj.setZcname(rs.getString("zcname"));
        obj.setZcempn(rs.getString("zcempn"));
        obj.setZcsern(rs.getString("zcsern"));
        obj.setZcgrps(rs.getString("zcgrps"));
        obj.setMemo(rs.getString("memo"));
        obj.setIfsent(rs.getString("ifsent"));
        obj.setSentdate(rs.getString("sentdate"));
        obj.setNewdate(rs.getString("newdate"));
        obj.setNewuser(rs.getString("newuser"));
        obj.setRjtuser(rs.getString("rjtuser"));
        obj.setRjtdate(rs.getString("rjtdate"));
        obj.setChguser(rs.getString("chguser"));
        obj.setChgdate(rs.getString("chgdate"));

        //fld.getLong_range(obj.getFdate(), obj.getFlt_num(), obj.getPort(), empno);
        //String tempstr = fld.getLongRang();
       
        //if ("Y".equals(ifNeedZCReport(obj.getAct_rank(), obj.getSpecial_indicator(), tempstr, obj.getPort())))
        //{
      //改為ZC皆可看,以免值為null
        if("FC".equals(obj.getAct_rank()))
        {
          if (("".equals(obj.getSeqno()) | obj.getSeqno() == null))
          {
            obj.setSeqno(rs.getString("maxseqno"));
            try
            {
              GetFltInfo ft;
              FlightCrewList fcl = null;
              String flt_num = obj.getFlt_num();

              if (obj.getFlt_num().indexOf("Z") > 0)
              {
                ft = new GetFltInfo(obj.getFdate(), flt_num, true);

                ft.RetrieveDataForZC(empno, obj.getPort());
                fcl = new FlightCrewList(ft, obj.getPort(), obj.getStdDt());

                fcl.RetrieveDataForZC(empno, obj.getPort());
              }
              else
              {
                ft = new GetFltInfo(obj.getFdate(), flt_num);

                ft.RetrieveDataForZC(empno, obj.getPort());

                fcl = new FlightCrewList(ft, obj.getPort(), obj.getStdDt());

                fcl.RetrieveDataForZC(empno, obj.getPort());
              }

              CrewInfoObj caObj = fcl.getCAObj();
              if (caObj != null)
              {
                obj.setCpname(caObj.getCname());
                obj.setCpno(caObj.getEmpno());
              }

              FltObj fltObj = fcl.getFltObj();
              obj.setAcno(fltObj.getAcno());

              CrewInfoObj purObj = fcl.getPurCrewObj();
              obj.setPsrempn(purObj.getEmpno());
              obj.setPsrsern(purObj.getSern());
              obj.setPsrname(purObj.getCname());
              obj.setPgroups(purObj.getGrp());

              EGInfo egi = new EGInfo(empno);
              EgInfoObj egobj = egi.getEGInfoObj(empno);
              obj.setZcempn(egobj.getEmpn());
              obj.setZcname(egobj.getCname());
              obj.setZcsern(egobj.getSern());
              obj.setZcgrps(egobj.getGroups());

              ArrayList zccrewAL = new ArrayList();
              ArrayList crewObjList = fcl.getCrewObjList();
              for (int i = 0; i < crewObjList.size(); ++i)
              {
                CrewInfoObj cobj = (CrewInfoObj)crewObjList.get(i);
                if (empno.equals(cobj.getEmpno()))
                  continue;
                ZCReportCrewListObj zccrewobj = new ZCReportCrewListObj();
                zccrewobj.setEmpno(cobj.getEmpno());
                zccrewobj.setSern(cobj.getSern());
                zccrewobj.setCname(cobj.getCname());
                zccrewobj.setGrp(cobj.getGrp());
                zccrewobj.setSeqno(obj.getSeqno());
                zccrewAL.add(zccrewobj);
              }

              obj.setZccrewObjAL(zccrewAL);
            }
            catch (Exception e)
            {
              System.out.println("**" + e.toString());
              this.errorstr = e.toString();
            }

          }
          else
          {
            ArrayList zccrewAL = new ArrayList();
            zccrewAL = getZCCrewList(obj.getSeqno());
            if (zccrewAL.size() > 0)
            {
              obj.setZccrewObjAL(zccrewAL);
            }
            else
            {
              try
              {
                GetFltInfo ft = new GetFltInfo(obj.getFdate(), obj.getFlt_num());
                FlightCrewList fcl = new FlightCrewList(ft, obj.getPort(), obj.getStdDt());

                fcl.RetrieveDataForZC(empno, obj.getPort());
                ArrayList crewObjList = fcl.getCrewObjList();
                for (int i = 0; i < crewObjList.size(); ++i)
                {
                  CrewInfoObj cobj = (CrewInfoObj)crewObjList.get(i);
                  if (empno.equals(cobj.getEmpno()))
                    continue;
                  ZCReportCrewListObj zccrewobj = new ZCReportCrewListObj();
                  zccrewobj.setEmpno(cobj.getEmpno());
                  zccrewobj.setSern(cobj.getSern());
                  zccrewobj.setCname(cobj.getCname());
                  zccrewobj.setGrp(cobj.getGrp());
                  zccrewobj.setSeqno(obj.getSeqno());
                  zccrewAL.add(zccrewobj);
                }

                obj.setZccrewObjAL(zccrewAL);
              }
              catch (Exception e)
              {
                System.out.print(e.toString());
                this.errorstr = e.toString();
              }
            }

            obj.setZcfltirrObjAL(getZCFltIrrItem(obj.getSeqno()));
          }
        }
        this.objAL.add(obj);
      }

    }
    catch (Exception e)
    {
      System.out.println(e.toString());
      this.errorstr = e.toString();
    }
    finally
    {
      try
      {
        if (rs != null)
          rs.close();
      }
      catch (Exception localException1)
      {
      }
      try
      {
        if (stmt != null)
          stmt.close();
      }
      catch (Exception localException2)
      {
      }
      try
      {
        if (pstmt != null)
          pstmt.close();
      }
      catch (Exception localException3)
      {
      }
      try
      {
        if (conn != null)
          conn.close();
      }
      catch (Exception e)
      {
      }
    }
  }



public ArrayList getZCCrewList(String seqno)
  {
    Connection conn = null;
    Statement stmt = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    ArrayList zccrewAL = new ArrayList();
    try
    {
      ConnectionHelper ch = new ConnectionHelper();
      conn = ch.getConnection();
      stmt = conn.createStatement();

      this.sql = " SELECT * FROM egtzccrew WHERE seqno = to_number(" + seqno + ") ";

      rs = stmt.executeQuery(this.sql);

      while (rs.next())
      {
        ZCReportCrewListObj zccrewobj = new ZCReportCrewListObj();
        zccrewobj.setSeqno(rs.getString("seqno"));
        zccrewobj.setEmpno(rs.getString("empno"));
        zccrewobj.setSern(rs.getString("sern"));
        zccrewobj.setCname(rs.getString("cname"));
        zccrewobj.setDuty(rs.getString("duty"));
        zccrewobj.setScore(rs.getString("score"));
        zccrewobj.setGrp(rs.getString("grp"));
        zccrewobj.setBest_performance(rs.getString("best_performance"));
        zccrewobj.setGradeobjAL(getCrewGrade(rs.getString("seqno"), rs.getString("empno")));
        zccrewAL.add(zccrewobj);
      }

    }
    catch (Exception e)
    {
      System.out.println(e.toString());
      this.errorstr = e.toString();
    }
    finally
    {
      try
      {
        if (rs != null)
          rs.close();
      }
      catch (Exception localException1)
      {
      }
      try
      {
        if (stmt != null)
          stmt.close();
      }
      catch (Exception localException2)
      {
      }
      try
      {
        if (pstmt != null)
          pstmt.close();
      }
      catch (Exception localException3)
      {
      }
      try
      {
        if (conn != null)
          conn.close();
      }
      catch (Exception e)
      {
      }
    }
    this.crewListobjAL = zccrewAL;
    return zccrewAL;
  }

  public ArrayList getZCFltIrrItem(String seqno)
  {
    Connection conn = null;
    Statement stmt = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    ArrayList fltirrAL = new ArrayList();
    try
    {
      ConnectionHelper ch = new ConnectionHelper();
      conn = ch.getConnection();
      stmt = conn.createStatement();

      this.sql = " SELECT To_Char(cflt.fltd,'yyyy/mm/dd') fltd, cflt.fltno, cflt.sect, cflt.acno,  cflt.psrempn, cflt.psrsern, cflt.psrname,  To_Char(cmdt.itemclose_date,'yyyy/mm/dd hh24:mi') itemclose_date2,  cmdt.*, pi.itemdsc dsc  FROM egtzcflt cflt, egtzccmdt cmdt, egtcmpi pi WHERE cflt.seqno = cmdt.seqno  AND cmdt.itemno = pi.itemno AND cmdt.seqno = to_number(" + 
        seqno + ")";

      rs = stmt.executeQuery(this.sql);

      while (rs.next())
      {
        ZCFltIrrItemObj fltirrobj = new ZCFltIrrItemObj();
        fltirrobj.setSeqkey(rs.getString("seqkey"));
        fltirrobj.setSeqno(rs.getString("seqno"));
        fltirrobj.setFltd(rs.getString("fltd"));
        fltirrobj.setFltno(rs.getString("fltno"));
        fltirrobj.setSect(rs.getString("sect"));
        fltirrobj.setAcno(rs.getString("acno"));
        fltirrobj.setPsrempn(rs.getString("psrempn"));
        fltirrobj.setPsrname(rs.getString("psrname"));
        fltirrobj.setPsrsern(rs.getString("psrsern"));
        fltirrobj.setItemno(rs.getString("itemno"));
        fltirrobj.setItemdsc(rs.getString("itemdsc"));
        fltirrobj.setItemdsc2(rs.getString("dsc"));
        fltirrobj.setComments(rs.getString("comments"));
        fltirrobj.setFlag(rs.getString("flag"));
        fltirrobj.setItemclose(rs.getString("itemclose"));
        fltirrobj.setItemclose_date(rs.getString("itemclose_date2"));
        fltirrAL.add(fltirrobj);
      }

    }
    catch (Exception e)
    {
      System.out.println(e.toString());
      this.errorstr = e.toString();
    }
    finally
    {
      try
      {
        if (rs != null)
          rs.close();
      }
      catch (Exception localException1)
      {
      }
      try
      {
        if (stmt != null)
          stmt.close();
      }
      catch (Exception localException2)
      {
      }
      try
      {
        if (pstmt != null)
          pstmt.close();
      }
      catch (Exception localException3)
      {
      }
      try
      {
        if (conn != null)
          conn.close();
      }
      catch (Exception e)
      {
      }
    }
    this.fltIrrobjAL = fltirrAL;
    return fltirrAL;
  }

  public ArrayList getCrewGrade(String seqno, String empno)
  {
    Connection conn = null;
    Statement stmt = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    ArrayList gradeAL = new ArrayList();
    try
    {
      ConnectionHelper ch = new ConnectionHelper();
      conn = ch.getConnection();
      stmt = conn.createStatement();

      this.sql = " SELECT gddt.*, crew.cname, gdtp.gdname dsc, crew.score,gdtp.comments deptcreate  FROM egtzcgddt gddt, egtgdtp gdtp, egtzccrew crew  WHERE crew.seqno = gddt.seqno  AND gddt.gdtype = gdtp.gdtype AND crew.empno = gddt.empno  AND gddt.seqno = to_number(" + 
        seqno + ") AND (gddt.empno = '" + empno + "' OR gddt.sern = '" + empno + "') ";

      rs = stmt.executeQuery(this.sql);

      while (rs.next())
      {
        ZCGradeObj gradeobj = new ZCGradeObj();
        gradeobj.setSeqno(rs.getString("seqno"));
        gradeobj.setEmpno(rs.getString("empno"));
        gradeobj.setSern(rs.getString("sern"));
        gradeobj.setCname(rs.getString("cname"));
        gradeobj.setGdtype(rs.getString("gdtype"));
        gradeobj.setGddesc(rs.getString("dsc"));
        gradeobj.setScore(rs.getString("score"));
        gradeobj.setComments(rs.getString("comments"));
        gradeobj.setDeptcreate(rs.getString("deptcreate"));
        gradeAL.add(gradeobj);
      }

    }
    catch (Exception e)
    {
      System.out.println(e.toString());
      this.errorstr = e.toString();
    }
    finally
    {
      try
      {
        if (rs != null)
          rs.close();
      }
      catch (Exception localException1)
      {
      }
      try
      {
        if (stmt != null)
          stmt.close();
      }
      catch (Exception localException2)
      {
      }
      try
      {
        if (pstmt != null)
          pstmt.close();
      }
      catch (Exception localException3)
      {
      }
      try
      {
        if (conn != null)
          conn.close();
      }
      catch (Exception e)
      {
      }
    }
    this.crewGradeobjAL = gradeAL;
    return this.crewGradeobjAL;
  }

  public void getZCFltListForPR(String fltdt, String fltno, String sect, String purempno)
  {
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    try
    {
      ConnectionHelper ch = new ConnectionHelper();
      conn = ch.getConnection();
      stmt = conn.createStatement();

      this.sql = " SELECT cflt.*, To_Char(fltd,'yyyy/mm/dd') fltd2,  To_Char(sentdate,'yyyy/mm/dd hh24:mi') sentdate2 FROM egtzcflt cflt  WHERE fltd = To_Date('" + 
        fltdt + "','yyyy/mm/dd') " + 
        " AND (fltno = '" + fltno + "' or fltno = REPLACE('" + fltno + "','Z',''))  " + 
        " AND sect ='" + sect + "' " + 
        " AND psrempn = '" + purempno + "'";

      rs = stmt.executeQuery(this.sql);

      while (rs.next())
      {
        ZCReportObj obj = new ZCReportObj();
        obj.setFdate(rs.getString("fltd2"));
        obj.setFlt_num(rs.getString("fltno"));
        obj.setStdDt(rs.getString("fltd2"));
        obj.setPort(rs.getString("sect"));
        obj.setAct_rank("FC");
        obj.setSeqno(rs.getString("seqno"));
        obj.setFltd(rs.getString("fltd2"));
        obj.setFltno(rs.getString("fltno"));
        obj.setSect(rs.getString("sect"));
        obj.setAcno(rs.getString("acno"));
        obj.setCpname(rs.getString("cpname"));
        obj.setCpno(rs.getString("cpno"));
        obj.setPsrname(rs.getString("psrname"));
        obj.setPsrempn(rs.getString("psrempn"));
        obj.setPsrsern(rs.getString("psrsern"));
        obj.setPgroups(rs.getString("pgroups"));
        obj.setZcname(rs.getString("zcname"));
        obj.setZcempn(rs.getString("zcempn"));
        obj.setZcsern(rs.getString("zcsern"));
        obj.setZcgrps(rs.getString("zcgrps"));
        obj.setMemo(rs.getString("memo"));
        obj.setIfsent(rs.getString("ifsent"));
        obj.setSentdate(rs.getString("sentdate2"));
        obj.setNewdate(rs.getString("newdate"));
        obj.setNewuser(rs.getString("newuser"));
        obj.setRjtuser(rs.getString("rjtuser"));
        obj.setRjtdate(rs.getString("rjtdate"));
        obj.setChguser(rs.getString("chguser"));
        obj.setChgdate(rs.getString("chgdate"));

        if ("Y".equals(obj.getIfsent()))
        {
          ArrayList zccrewAL = new ArrayList();
          zccrewAL = getZCCrewList(obj.getSeqno());
          if (zccrewAL.size() > 0)
          {
            obj.setZccrewObjAL(zccrewAL);
          }
          obj.setZcfltirrObjAL(getZCFltIrrItem(obj.getSeqno()));
        }
        this.objAL.add(obj);
      }

    }
    catch (Exception e)
    {
      System.out.println(e.toString());
      this.errorstr = e.toString();
    }
    finally
    {
      try
      {
        if (rs != null)
          rs.close();
      }
      catch (Exception localException1)
      {
      }
      try
      {
        if (stmt != null) {
          stmt.close();
        }
      }
      catch (Exception localException2)
      {
      }
      try
      {
        if (conn != null)
          conn.close();
      }
      catch (Exception e)
      {
      }
    }
  }

  public String getZCReportSeqno(String fltdt, String fltno, String sect, String zcempno)
  {
    String tempseqno = "";
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    ResultSet rs2 = null;
    try
    {
      ConnectionHelper ch = new ConnectionHelper();
      conn = ch.getConnection();
      stmt = conn.createStatement();

      this.sql = " SELECT seqno FROM egtzcflt cflt  WHERE fltd = To_Date('" + 
        fltdt + "','yyyy/mm/dd') " + 
        " AND (fltno = '" + fltno + "' or fltno = REPLACE('" + fltno + "','Z',''))  " + 
        " AND sect ='" + sect + "' AND zcempn = '" + zcempno + "'";

      rs = stmt.executeQuery(this.sql);

      if (rs.next())
      {
        if (("".equals(rs.getString("seqno")) | rs.getString("seqno") == null))
        {
          rs2 = stmt.executeQuery("SELECT Max(seqno)+1 seqno FROM egtzcflt");
          if (rs2.next())
          {
            tempseqno = rs2.getString("seqno");
          }

        }

        tempseqno = rs.getString("seqno"); 
      }

      rs2 = stmt.executeQuery("SELECT Max(seqno)+1 seqno FROM egtzcflt");
      if (rs2.next())
      {
        tempseqno = rs2.getString("seqno");
      }

    }
    catch (Exception e)
    {
      System.out.println(e.toString());
      this.errorstr = e.toString();
    }
    finally
    {
      try
      {
        if (rs != null)
          rs.close();
      }
      catch (Exception localException1)
      {
      }
      try
      {
        if (rs2 != null)
          rs2.close();
      }
      catch (Exception localException2)
      {
      }
      try
      {
        if (stmt != null) {
          stmt.close();
        }
      }
      catch (Exception localException3)
      {
      }
      try
      {
        if (conn != null)
          conn.close();
      }
      catch (Exception e)
      {
      }
    }
    return tempseqno;
  }

  public String ifNeedZCReport(String rank, String special_indicator, String getLong_range, String sect)
  {
    String str = "N";
    if (("FC".equals(rank)) && (!("E".equals(special_indicator))) && ("Y".equals(getLong_range)))
    {
      str = "Y";
    }

    if (("FC".equals(rank)) && (!("E".equals(special_indicator))) && (sect.indexOf("HND") >= 0))
    {
      str = "Y";
    }

    return str;
  }
  
  private String getZCRank(String empno)
{
    // TODO Auto-generated method stub
      Connection conn = null;
      Statement stmt = null;
      ResultSet rs = null;
      String isZC = "";
      try
      {
        ConnectionHelper ch = new ConnectionHelper();
        conn = ch.getConnection();
        stmt = conn.createStatement();

        this.sql = " select rank_cd from fzdb.crew_rank_v where  staff_num = '"+empno+"' and rank_cd = 'FC' and (exp_dt is null or exp_dt > sysdate)";

        rs = stmt.executeQuery(this.sql);

        if(rs.next())
        {
         isZC= rs.getString("rank_cd");
        }

      }
      catch (Exception e)
      {
        System.out.println(e.toString());
        this.errorstr = e.toString();
      }
      finally
      {
        try
        {
          if (rs != null)
            rs.close();
        }
        catch (Exception localException1)
        {
        }
        try
        {
          if (stmt != null) {
            stmt.close();
          }
        }
        catch (Exception localException2)
        {
        }
        try
        {
          if (conn != null)
            conn.close();
        }
        catch (Exception e)
        {
        }
      }
    return isZC;
}

  public String getSql()
  {
    return this.sql;
  }

  public String getStr()
  {
    return this.errorstr;
  }

  public ArrayList getObjAL()
  {
    return this.objAL;
  }

  public ArrayList getCrewListObjAL()
  {
    return this.crewListobjAL;
  }

  public ArrayList getFltIrrObjAL()
  {
    return this.fltIrrobjAL;
  }

  public ArrayList getCrewGradeObjAL()
  {
    return this.crewGradeobjAL;
  }
}